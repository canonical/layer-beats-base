[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, unit

[vars]
act_path = {toxinidir}/actions/
src_path = {toxinidir}/reactive/
tst_path = {toxinidir}/tests/
lib_path = {toxinidir}/lib/
all_path = {[vars]src_path} {[vars]tst_path} {[vars]lib_path} {[vars]act_path}


[testenv]
setenv =
  PYTHONPATH = {toxinidir}:{[vars]lib_path}:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
basepython=python3

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}


[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8<5.0  # https://github.com/tholo/pytest-flake8/issues/87
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
    codespell
commands =
    # uncomment the following line if this charm owns a lib
    # codespell {[vars]lib_path}
    codespell {toxinidir}/. --skip {toxinidir}/.git --skip {toxinidir}/.tox \
      --skip {toxinidir}/build --skip {toxinidir}/lib --skip {toxinidir}/venv \
      --skip {toxinidir}/.mypy_cache --skip {toxinidir}/icon.svg
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
envdir={toxworkdir}/py3
deps=
    charms.reactive
    coverage
    nose
commands =
    nosetests -v --nocapture --with-coverage --cover-erase \
        --cover-package=beats_base \
        --cover-package=elasticbeats \
        --cover-min-percentage=50 \
        tests/unit/
